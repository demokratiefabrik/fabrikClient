{"code":"\"use strict\";window.SelectFilter={init:function(e,t,o){if(e.match(/__prefix__/))return;const l=document.getElementById(e);l.id+=\"_from\",l.className=\"filtered\";for(const y of l.parentNode.getElementsByTagName(\"p\"))y.classList.contains(\"info\")?l.parentNode.removeChild(y):y.classList.contains(\"help\")&&l.parentNode.insertBefore(y,l.parentNode.firstChild);const n=quickElement(\"div\",l.parentNode);n.className=o?\"selector stacked\":\"selector\";const i=quickElement(\"div\",n);i.className=\"selector-available\";const c=quickElement(\"h2\",i,interpolate(gettext(\"Available %s\")+\" \",[t]));quickElement(\"span\",c,\"\",\"class\",\"help help-tooltip help-icon\",\"title\",interpolate(gettext('This is the list of available %s. You may choose some by selecting them in the box below and then clicking the \"Choose\" arrow between the two boxes.'),[t]));const s=quickElement(\"p\",i,\"\",\"id\",e+\"_filter\");s.className=\"selector-filter\";const r=quickElement(\"label\",s,\"\",\"for\",e+\"_input\");quickElement(\"span\",r,\"\",\"class\",\"help-tooltip search-label-icon\",\"title\",interpolate(gettext(\"Type into this box to filter down the list of available %s.\"),[t])),s.appendChild(document.createTextNode(\" \"));const a=quickElement(\"input\",s,\"\",\"type\",\"text\",\"placeholder\",gettext(\"Filter\"));a.id=e+\"_input\",i.appendChild(l);const d=quickElement(\"a\",i,gettext(\"Choose all\"),\"title\",interpolate(gettext(\"Click to choose all %s at once.\"),[t]),\"href\",\"#\",\"id\",e+\"_add_all_link\");d.className=\"selector-chooseall\";const m=quickElement(\"ul\",n);m.className=\"selector-chooser\";const h=quickElement(\"a\",quickElement(\"li\",m),gettext(\"Choose\"),\"title\",gettext(\"Choose\"),\"href\",\"#\",\"id\",e+\"_add_link\");h.className=\"selector-add\";const _=quickElement(\"a\",quickElement(\"li\",m),gettext(\"Remove\"),\"title\",gettext(\"Remove\"),\"href\",\"#\",\"id\",e+\"_remove_link\");_.className=\"selector-remove\";const u=quickElement(\"div\",n);u.className=\"selector-chosen\";const f=quickElement(\"h2\",u,interpolate(gettext(\"Chosen %s\")+\" \",[t]));quickElement(\"span\",f,\"\",\"class\",\"help help-tooltip help-icon\",\"title\",interpolate(gettext('This is the list of chosen %s. You may remove some by selecting them in the box below and then clicking the \"Remove\" arrow between the two boxes.'),[t]));const p=quickElement(\"select\",u,\"\",\"id\",e+\"_to\",\"multiple\",\"\",\"size\",l.size,\"name\",l.name);p.className=\"filtered\";const g=quickElement(\"a\",u,gettext(\"Remove all\"),\"title\",interpolate(gettext(\"Click to remove all chosen %s at once.\"),[t]),\"href\",\"#\",\"id\",e+\"_remove_all_link\");g.className=\"selector-clearall\",l.name=l.name+\"_old\";const k=function(t,o,l,n,i){o.classList.contains(\"active\")&&(l(n,i),SelectFilter.refresh_icons(e)),t.preventDefault()};if(d.addEventListener(\"click\",(function(t){k(t,this,SelectBox.move_all,e+\"_from\",e+\"_to\")})),h.addEventListener(\"click\",(function(t){k(t,this,SelectBox.move,e+\"_from\",e+\"_to\")})),_.addEventListener(\"click\",(function(t){k(t,this,SelectBox.move,e+\"_to\",e+\"_from\")})),g.addEventListener(\"click\",(function(t){k(t,this,SelectBox.move_all,e+\"_to\",e+\"_from\")})),a.addEventListener(\"keypress\",(function(t){SelectFilter.filter_key_press(t,e)})),a.addEventListener(\"keyup\",(function(t){SelectFilter.filter_key_up(t,e)})),a.addEventListener(\"keydown\",(function(t){SelectFilter.filter_key_down(t,e)})),n.addEventListener(\"change\",(function(t){\"SELECT\"===t.target.tagName&&SelectFilter.refresh_icons(e)})),n.addEventListener(\"dblclick\",(function(t){\"OPTION\"===t.target.tagName&&(t.target.closest(\"select\").id===e+\"_to\"?SelectBox.move(e+\"_to\",e+\"_from\"):SelectBox.move(e+\"_from\",e+\"_to\"),SelectFilter.refresh_icons(e))})),l.closest(\"form\").addEventListener(\"submit\",(function(){SelectBox.select_all(e+\"_to\")})),SelectBox.init(e+\"_from\"),SelectBox.init(e+\"_to\"),SelectBox.move(e+\"_from\",e+\"_to\"),!o){const t=document.getElementById(e+\"_from\"),o=document.getElementById(e+\"_to\");let l=s.offsetHeight+t.offsetHeight;const n=window.getComputedStyle(o);\"border-box\"===n.getPropertyValue(\"box-sizing\")&&(l+=parseInt(n.getPropertyValue(\"padding-top\"),10)+parseInt(n.getPropertyValue(\"padding-bottom\"),10)+parseInt(n.getPropertyValue(\"border-top-width\"),10)+parseInt(n.getPropertyValue(\"border-bottom-width\"),10)),o.style.height=l+\"px\"}SelectFilter.refresh_icons(e)},any_selected:function(e){e.required=!0;const t=e.checkValidity();return e.required=!1,t},refresh_icons:function(e){const t=document.getElementById(e+\"_from\"),o=document.getElementById(e+\"_to\");document.getElementById(e+\"_add_link\").classList.toggle(\"active\",SelectFilter.any_selected(t)),document.getElementById(e+\"_remove_link\").classList.toggle(\"active\",SelectFilter.any_selected(o)),document.getElementById(e+\"_add_all_link\").classList.toggle(\"active\",t.querySelector(\"option\")),document.getElementById(e+\"_remove_all_link\").classList.toggle(\"active\",o.querySelector(\"option\"))},filter_key_press:function(e,t){const o=document.getElementById(t+\"_from\");(e.which&&13===e.which||e.keyCode&&13===e.keyCode)&&(o.selectedIndex=0,SelectBox.move(t+\"_from\",t+\"_to\"),o.selectedIndex=0,e.preventDefault())},filter_key_up:function(e,t){const o=document.getElementById(t+\"_from\"),l=o.selectedIndex;SelectBox.filter(t+\"_from\",document.getElementById(t+\"_input\").value),o.selectedIndex=l},filter_key_down:function(e,t){const o=document.getElementById(t+\"_from\");if(e.which&&39===e.which||e.keyCode&&39===e.keyCode){const e=o.selectedIndex;return SelectBox.move(t+\"_from\",t+\"_to\"),void(o.selectedIndex=e===o.length?o.length-1:e)}(e.which&&40===e.which||e.keyCode&&40===e.keyCode)&&(o.selectedIndex=o.length===o.selectedIndex+1?0:o.selectedIndex+1),(e.which&&38===e.which||e.keyCode&&38===e.keyCode)&&(o.selectedIndex=0===o.selectedIndex?o.length-1:o.selectedIndex-1)}},window.addEventListener(\"load\",(function(e){document.querySelectorAll(\"select.selectfilter, select.selectfilterstacked\").forEach((function(e){const t=e.dataset;SelectFilter.init(e.id,t.fieldName,parseInt(t.isStacked,10))}))}));","name":"fabrikauth/admin/js/SelectFilter2.js","input":"/*global SelectBox, gettext, interpolate, quickElement, SelectFilter*/\n/*\nSelectFilter2 - Turns a multiple-select box into a filter interface.\n\nRequires core.js and SelectBox.js.\n*/\n'use strict';\n{\n    window.SelectFilter = {\n        init: function(field_id, field_name, is_stacked) {\n            if (field_id.match(/__prefix__/)) {\n                // Don't initialize on empty forms.\n                return;\n            }\n            const from_box = document.getElementById(field_id);\n            from_box.id += '_from'; // change its ID\n            from_box.className = 'filtered';\n\n            for (const p of from_box.parentNode.getElementsByTagName('p')) {\n                if (p.classList.contains(\"info\")) {\n                    // Remove <p class=\"info\">, because it just gets in the way.\n                    from_box.parentNode.removeChild(p);\n                } else if (p.classList.contains(\"help\")) {\n                    // Move help text up to the top so it isn't below the select\n                    // boxes or wrapped off on the side to the right of the add\n                    // button:\n                    from_box.parentNode.insertBefore(p, from_box.parentNode.firstChild);\n                }\n            }\n\n            // <div class=\"selector\"> or <div class=\"selector stacked\">\n            const selector_div = quickElement('div', from_box.parentNode);\n            selector_div.className = is_stacked ? 'selector stacked' : 'selector';\n\n            // <div class=\"selector-available\">\n            const selector_available = quickElement('div', selector_div);\n            selector_available.className = 'selector-available';\n            const title_available = quickElement('h2', selector_available, interpolate(gettext('Available %s') + ' ', [field_name]));\n            quickElement(\n                'span', title_available, '',\n                'class', 'help help-tooltip help-icon',\n                'title', interpolate(\n                    gettext(\n                        'This is the list of available %s. You may choose some by ' +\n                        'selecting them in the box below and then clicking the ' +\n                        '\"Choose\" arrow between the two boxes.'\n                    ),\n                    [field_name]\n                )\n            );\n\n            const filter_p = quickElement('p', selector_available, '', 'id', field_id + '_filter');\n            filter_p.className = 'selector-filter';\n\n            const search_filter_label = quickElement('label', filter_p, '', 'for', field_id + '_input');\n\n            quickElement(\n                'span', search_filter_label, '',\n                'class', 'help-tooltip search-label-icon',\n                'title', interpolate(gettext(\"Type into this box to filter down the list of available %s.\"), [field_name])\n            );\n\n            filter_p.appendChild(document.createTextNode(' '));\n\n            const filter_input = quickElement('input', filter_p, '', 'type', 'text', 'placeholder', gettext(\"Filter\"));\n            filter_input.id = field_id + '_input';\n\n            selector_available.appendChild(from_box);\n            const choose_all = quickElement('a', selector_available, gettext('Choose all'), 'title', interpolate(gettext('Click to choose all %s at once.'), [field_name]), 'href', '#', 'id', field_id + '_add_all_link');\n            choose_all.className = 'selector-chooseall';\n\n            // <ul class=\"selector-chooser\">\n            const selector_chooser = quickElement('ul', selector_div);\n            selector_chooser.className = 'selector-chooser';\n            const add_link = quickElement('a', quickElement('li', selector_chooser), gettext('Choose'), 'title', gettext('Choose'), 'href', '#', 'id', field_id + '_add_link');\n            add_link.className = 'selector-add';\n            const remove_link = quickElement('a', quickElement('li', selector_chooser), gettext('Remove'), 'title', gettext('Remove'), 'href', '#', 'id', field_id + '_remove_link');\n            remove_link.className = 'selector-remove';\n\n            // <div class=\"selector-chosen\">\n            const selector_chosen = quickElement('div', selector_div);\n            selector_chosen.className = 'selector-chosen';\n            const title_chosen = quickElement('h2', selector_chosen, interpolate(gettext('Chosen %s') + ' ', [field_name]));\n            quickElement(\n                'span', title_chosen, '',\n                'class', 'help help-tooltip help-icon',\n                'title', interpolate(\n                    gettext(\n                        'This is the list of chosen %s. You may remove some by ' +\n                        'selecting them in the box below and then clicking the ' +\n                        '\"Remove\" arrow between the two boxes.'\n                    ),\n                    [field_name]\n                )\n            );\n\n            const to_box = quickElement('select', selector_chosen, '', 'id', field_id + '_to', 'multiple', '', 'size', from_box.size, 'name', from_box.name);\n            to_box.className = 'filtered';\n            const clear_all = quickElement('a', selector_chosen, gettext('Remove all'), 'title', interpolate(gettext('Click to remove all chosen %s at once.'), [field_name]), 'href', '#', 'id', field_id + '_remove_all_link');\n            clear_all.className = 'selector-clearall';\n\n            from_box.name = from_box.name + '_old';\n\n            // Set up the JavaScript event handlers for the select box filter interface\n            const move_selection = function(e, elem, move_func, from, to) {\n                if (elem.classList.contains('active')) {\n                    move_func(from, to);\n                    SelectFilter.refresh_icons(field_id);\n                }\n                e.preventDefault();\n            };\n            choose_all.addEventListener('click', function(e) {\n                move_selection(e, this, SelectBox.move_all, field_id + '_from', field_id + '_to');\n            });\n            add_link.addEventListener('click', function(e) {\n                move_selection(e, this, SelectBox.move, field_id + '_from', field_id + '_to');\n            });\n            remove_link.addEventListener('click', function(e) {\n                move_selection(e, this, SelectBox.move, field_id + '_to', field_id + '_from');\n            });\n            clear_all.addEventListener('click', function(e) {\n                move_selection(e, this, SelectBox.move_all, field_id + '_to', field_id + '_from');\n            });\n            filter_input.addEventListener('keypress', function(e) {\n                SelectFilter.filter_key_press(e, field_id);\n            });\n            filter_input.addEventListener('keyup', function(e) {\n                SelectFilter.filter_key_up(e, field_id);\n            });\n            filter_input.addEventListener('keydown', function(e) {\n                SelectFilter.filter_key_down(e, field_id);\n            });\n            selector_div.addEventListener('change', function(e) {\n                if (e.target.tagName === 'SELECT') {\n                    SelectFilter.refresh_icons(field_id);\n                }\n            });\n            selector_div.addEventListener('dblclick', function(e) {\n                if (e.target.tagName === 'OPTION') {\n                    if (e.target.closest('select').id === field_id + '_to') {\n                        SelectBox.move(field_id + '_to', field_id + '_from');\n                    } else {\n                        SelectBox.move(field_id + '_from', field_id + '_to');\n                    }\n                    SelectFilter.refresh_icons(field_id);\n                }\n            });\n            from_box.closest('form').addEventListener('submit', function() {\n                SelectBox.select_all(field_id + '_to');\n            });\n            SelectBox.init(field_id + '_from');\n            SelectBox.init(field_id + '_to');\n            // Move selected from_box options to to_box\n            SelectBox.move(field_id + '_from', field_id + '_to');\n\n            if (!is_stacked) {\n                // In horizontal mode, give the same height to the two boxes.\n                const j_from_box = document.getElementById(field_id + '_from');\n                const j_to_box = document.getElementById(field_id + '_to');\n                let height = filter_p.offsetHeight + j_from_box.offsetHeight;\n\n                const j_to_box_style = window.getComputedStyle(j_to_box);\n                if (j_to_box_style.getPropertyValue('box-sizing') === 'border-box') {\n                    // Add the padding and border to the final height.\n                    height += parseInt(j_to_box_style.getPropertyValue('padding-top'), 10)\n                        + parseInt(j_to_box_style.getPropertyValue('padding-bottom'), 10)\n                        + parseInt(j_to_box_style.getPropertyValue('border-top-width'), 10)\n                        + parseInt(j_to_box_style.getPropertyValue('border-bottom-width'), 10);\n                }\n\n                j_to_box.style.height = height + 'px';\n            }\n\n            // Initial icon refresh\n            SelectFilter.refresh_icons(field_id);\n        },\n        any_selected: function(field) {\n            // Temporarily add the required attribute and check validity.\n            field.required = true;\n            const any_selected = field.checkValidity();\n            field.required = false;\n            return any_selected;\n        },\n        refresh_icons: function(field_id) {\n            const from = document.getElementById(field_id + '_from');\n            const to = document.getElementById(field_id + '_to');\n            // Active if at least one item is selected\n            document.getElementById(field_id + '_add_link').classList.toggle('active', SelectFilter.any_selected(from));\n            document.getElementById(field_id + '_remove_link').classList.toggle('active', SelectFilter.any_selected(to));\n            // Active if the corresponding box isn't empty\n            document.getElementById(field_id + '_add_all_link').classList.toggle('active', from.querySelector('option'));\n            document.getElementById(field_id + '_remove_all_link').classList.toggle('active', to.querySelector('option'));\n        },\n        filter_key_press: function(event, field_id) {\n            const from = document.getElementById(field_id + '_from');\n            // don't submit form if user pressed Enter\n            if ((event.which && event.which === 13) || (event.keyCode && event.keyCode === 13)) {\n                from.selectedIndex = 0;\n                SelectBox.move(field_id + '_from', field_id + '_to');\n                from.selectedIndex = 0;\n                event.preventDefault();\n            }\n        },\n        filter_key_up: function(event, field_id) {\n            const from = document.getElementById(field_id + '_from');\n            const temp = from.selectedIndex;\n            SelectBox.filter(field_id + '_from', document.getElementById(field_id + '_input').value);\n            from.selectedIndex = temp;\n        },\n        filter_key_down: function(event, field_id) {\n            const from = document.getElementById(field_id + '_from');\n            // right arrow -- move across\n            if ((event.which && event.which === 39) || (event.keyCode && event.keyCode === 39)) {\n                const old_index = from.selectedIndex;\n                SelectBox.move(field_id + '_from', field_id + '_to');\n                from.selectedIndex = (old_index === from.length) ? from.length - 1 : old_index;\n                return;\n            }\n            // down arrow -- wrap around\n            if ((event.which && event.which === 40) || (event.keyCode && event.keyCode === 40)) {\n                from.selectedIndex = (from.length === from.selectedIndex + 1) ? 0 : from.selectedIndex + 1;\n            }\n            // up arrow -- wrap around\n            if ((event.which && event.which === 38) || (event.keyCode && event.keyCode === 38)) {\n                from.selectedIndex = (from.selectedIndex === 0) ? from.length - 1 : from.selectedIndex - 1;\n            }\n        }\n    };\n\n    window.addEventListener('load', function(e) {\n        document.querySelectorAll('select.selectfilter, select.selectfilterstacked').forEach(function(el) {\n            const data = el.dataset;\n            SelectFilter.init(el.id, data.fieldName, parseInt(data.isStacked, 10));\n        });\n    });\n}\n","inputSourceMap":null}