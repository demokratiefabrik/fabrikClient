{"code":"\"use strict\";{const e={cache:{},init:function(t){const o=document.getElementById(t);e.cache[t]=[];const c=e.cache[t];for(const e of o.options)c.push({value:e.value,text:e.text,displayed:1})},redisplay:function(t){const o=document.getElementById(t);o.innerHTML=\"\";for(const c of e.cache[t])if(c.displayed){const e=new Option(c.text,c.value,!1,!1);e.title=c.text,o.appendChild(e)}},filter:function(t,o){const c=o.toLowerCase().split(/\\s+/);for(const n of e.cache[t]){n.displayed=1;const e=n.text.toLowerCase();for(const t of c)if(-1===e.indexOf(t)){n.displayed=0;break}}e.redisplay(t)},delete_from_cache:function(t,o){let c=null;const n=e.cache[t];for(const[e,s]of n.entries())if(s.value===o){c=e;break}n.splice(c,1)},add_to_cache:function(t,o){e.cache[t].push({value:o.value,text:o.text,displayed:1})},cache_contains:function(t,o){for(const c of e.cache[t])if(c.value===o)return!0;return!1},move:function(t,o){const c=document.getElementById(t);for(const n of c.options){const c=n.value;n.selected&&e.cache_contains(t,c)&&(e.add_to_cache(o,{value:c,text:n.text,displayed:1}),e.delete_from_cache(t,c))}e.redisplay(t),e.redisplay(o)},move_all:function(t,o){const c=document.getElementById(t);for(const n of c.options){const c=n.value;e.cache_contains(t,c)&&(e.add_to_cache(o,{value:c,text:n.text,displayed:1}),e.delete_from_cache(t,c))}e.redisplay(t),e.redisplay(o)},sort:function(t){e.cache[t].sort((function(e,t){return e=e.text.toLowerCase(),t=t.text.toLowerCase(),e>t?1:e<t?-1:0}))},select_all:function(e){const t=document.getElementById(e);for(const o of t.options)o.selected=!0}};window.SelectBox=e}","name":"fabrikauth/admin/js/SelectBox.js","input":"'use strict';\n{\n    const SelectBox = {\n        cache: {},\n        init: function(id) {\n            const box = document.getElementById(id);\n            SelectBox.cache[id] = [];\n            const cache = SelectBox.cache[id];\n            for (const node of box.options) {\n                cache.push({value: node.value, text: node.text, displayed: 1});\n            }\n        },\n        redisplay: function(id) {\n            // Repopulate HTML select box from cache\n            const box = document.getElementById(id);\n            box.innerHTML = '';\n            for (const node of SelectBox.cache[id]) {\n                if (node.displayed) {\n                    const new_option = new Option(node.text, node.value, false, false);\n                    // Shows a tooltip when hovering over the option\n                    new_option.title = node.text;\n                    box.appendChild(new_option);\n                }\n            }\n        },\n        filter: function(id, text) {\n            // Redisplay the HTML select box, displaying only the choices containing ALL\n            // the words in text. (It's an AND search.)\n            const tokens = text.toLowerCase().split(/\\s+/);\n            for (const node of SelectBox.cache[id]) {\n                node.displayed = 1;\n                const node_text = node.text.toLowerCase();\n                for (const token of tokens) {\n                    if (node_text.indexOf(token) === -1) {\n                        node.displayed = 0;\n                        break; // Once the first token isn't found we're done\n                    }\n                }\n            }\n            SelectBox.redisplay(id);\n        },\n        delete_from_cache: function(id, value) {\n            let delete_index = null;\n            const cache = SelectBox.cache[id];\n            for (const [i, node] of cache.entries()) {\n                if (node.value === value) {\n                    delete_index = i;\n                    break;\n                }\n            }\n            cache.splice(delete_index, 1);\n        },\n        add_to_cache: function(id, option) {\n            SelectBox.cache[id].push({value: option.value, text: option.text, displayed: 1});\n        },\n        cache_contains: function(id, value) {\n            // Check if an item is contained in the cache\n            for (const node of SelectBox.cache[id]) {\n                if (node.value === value) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        move: function(from, to) {\n            const from_box = document.getElementById(from);\n            for (const option of from_box.options) {\n                const option_value = option.value;\n                if (option.selected && SelectBox.cache_contains(from, option_value)) {\n                    SelectBox.add_to_cache(to, {value: option_value, text: option.text, displayed: 1});\n                    SelectBox.delete_from_cache(from, option_value);\n                }\n            }\n            SelectBox.redisplay(from);\n            SelectBox.redisplay(to);\n        },\n        move_all: function(from, to) {\n            const from_box = document.getElementById(from);\n            for (const option of from_box.options) {\n                const option_value = option.value;\n                if (SelectBox.cache_contains(from, option_value)) {\n                    SelectBox.add_to_cache(to, {value: option_value, text: option.text, displayed: 1});\n                    SelectBox.delete_from_cache(from, option_value);\n                }\n            }\n            SelectBox.redisplay(from);\n            SelectBox.redisplay(to);\n        },\n        sort: function(id) {\n            SelectBox.cache[id].sort(function(a, b) {\n                a = a.text.toLowerCase();\n                b = b.text.toLowerCase();\n                if (a > b) {\n                    return 1;\n                }\n                if (a < b) {\n                    return -1;\n                }\n                return 0;\n            } );\n        },\n        select_all: function(id) {\n            const box = document.getElementById(id);\n            for (const option of box.options) {\n                option.selected = true;\n            }\n        }\n    };\n    window.SelectBox = SelectBox;\n}\n","inputSourceMap":null}