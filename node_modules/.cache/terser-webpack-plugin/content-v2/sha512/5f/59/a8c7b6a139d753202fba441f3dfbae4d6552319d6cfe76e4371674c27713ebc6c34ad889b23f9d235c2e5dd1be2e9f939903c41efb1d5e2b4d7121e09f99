{"code":"\"use strict\";{const t={monthsOfYear:[gettext(\"January\"),gettext(\"February\"),gettext(\"March\"),gettext(\"April\"),gettext(\"May\"),gettext(\"June\"),gettext(\"July\"),gettext(\"August\"),gettext(\"September\"),gettext(\"October\"),gettext(\"November\"),gettext(\"December\")],daysOfWeek:[pgettext(\"one letter Sunday\",\"S\"),pgettext(\"one letter Monday\",\"M\"),pgettext(\"one letter Tuesday\",\"T\"),pgettext(\"one letter Wednesday\",\"W\"),pgettext(\"one letter Thursday\",\"T\"),pgettext(\"one letter Friday\",\"F\"),pgettext(\"one letter Saturday\",\"S\")],firstDayOfWeek:parseInt(get_format(\"FIRST_DAY_OF_WEEK\")),isLeapYear:function(t){return t%4===0&&t%100!==0||t%400===0},getDaysInMonth:function(e,n){let r;return r=1===e||3===e||5===e||7===e||8===e||10===e||12===e?31:4===e||6===e||9===e||11===e?30:2===e&&t.isLeapYear(n)?29:28,r},draw:function(e,n,r,a,i){const s=new Date,o=s.getDate(),c=s.getMonth()+1,u=s.getFullYear();let d=\"\",h=!1;\"undefined\"!==typeof i&&(h=i.getUTCFullYear()===n&&i.getUTCMonth()+1===e),e=parseInt(e),n=parseInt(n);const l=document.getElementById(r);removeChildren(l);const g=document.createElement(\"table\");quickElement(\"caption\",g,t.monthsOfYear[e-1]+\" \"+n);const f=quickElement(\"tbody\",g);let y=quickElement(\"tr\",f);for(let k=0;k<7;k++)quickElement(\"th\",y,t.daysOfWeek[(k+t.firstDayOfWeek)%7]);const m=new Date(n,e-1,1-t.firstDayOfWeek).getDay(),p=t.getDaysInMonth(e,n);let x;y=quickElement(\"tr\",f);for(let t=0;t<m;t++)x=quickElement(\"td\",y,\" \"),x.className=\"nonday\";function w(t,e){function n(n){n.preventDefault(),a(t,e,this.textContent)}return n}let M=1;for(let t=m;M<=p;t++){t%7===0&&1!==M&&(y=quickElement(\"tr\",f)),d=M===o&&e===c&&n===u?\"today\":\"\",h&&M===i.getUTCDate()&&(\"\"!==d&&(d+=\" \"),d+=\"selected\");const r=quickElement(\"td\",y,\"\",\"class\",d),a=quickElement(\"a\",r,M,\"href\",\"#\");a.addEventListener(\"click\",w(n,e)),M++}while(y.childNodes.length<7)x=quickElement(\"td\",y,\" \"),x.className=\"nonday\";l.appendChild(g)}};function Calendar(t,e,n){this.div_id=t,this.callback=e,this.today=new Date,this.currentMonth=this.today.getMonth()+1,this.currentYear=this.today.getFullYear(),\"undefined\"!==typeof n&&(this.selected=n)}Calendar.prototype={drawCurrent:function(){t.draw(this.currentMonth,this.currentYear,this.div_id,this.callback,this.selected)},drawDate:function(t,e,n){this.currentMonth=t,this.currentYear=e,n&&(this.selected=n),this.drawCurrent()},drawPreviousMonth:function(){1===this.currentMonth?(this.currentMonth=12,this.currentYear--):this.currentMonth--,this.drawCurrent()},drawNextMonth:function(){12===this.currentMonth?(this.currentMonth=1,this.currentYear++):this.currentMonth++,this.drawCurrent()},drawPreviousYear:function(){this.currentYear--,this.drawCurrent()},drawNextYear:function(){this.currentYear++,this.drawCurrent()}},window.Calendar=Calendar,window.CalendarNamespace=t}","name":"fabrikauth/admin/js/calendar.js","input":"/*global gettext, pgettext, get_format, quickElement, removeChildren*/\n/*\ncalendar.js - Calendar functions by Adrian Holovaty\ndepends on core.js for utility functions like removeChildren or quickElement\n*/\n'use strict';\n{\n    // CalendarNamespace -- Provides a collection of HTML calendar-related helper functions\n    const CalendarNamespace = {\n        monthsOfYear: [\n            gettext('January'),\n            gettext('February'),\n            gettext('March'),\n            gettext('April'),\n            gettext('May'),\n            gettext('June'),\n            gettext('July'),\n            gettext('August'),\n            gettext('September'),\n            gettext('October'),\n            gettext('November'),\n            gettext('December')\n        ],\n        daysOfWeek: [\n            pgettext('one letter Sunday', 'S'),\n            pgettext('one letter Monday', 'M'),\n            pgettext('one letter Tuesday', 'T'),\n            pgettext('one letter Wednesday', 'W'),\n            pgettext('one letter Thursday', 'T'),\n            pgettext('one letter Friday', 'F'),\n            pgettext('one letter Saturday', 'S')\n        ],\n        firstDayOfWeek: parseInt(get_format('FIRST_DAY_OF_WEEK')),\n        isLeapYear: function(year) {\n            return (((year % 4) === 0) && ((year % 100) !== 0 ) || ((year % 400) === 0));\n        },\n        getDaysInMonth: function(month, year) {\n            let days;\n            if (month === 1 || month === 3 || month === 5 || month === 7 || month === 8 || month === 10 || month === 12) {\n                days = 31;\n            }\n            else if (month === 4 || month === 6 || month === 9 || month === 11) {\n                days = 30;\n            }\n            else if (month === 2 && CalendarNamespace.isLeapYear(year)) {\n                days = 29;\n            }\n            else {\n                days = 28;\n            }\n            return days;\n        },\n        draw: function(month, year, div_id, callback, selected) { // month = 1-12, year = 1-9999\n            const today = new Date();\n            const todayDay = today.getDate();\n            const todayMonth = today.getMonth() + 1;\n            const todayYear = today.getFullYear();\n            let todayClass = '';\n\n            // Use UTC functions here because the date field does not contain time\n            // and using the UTC function variants prevent the local time offset\n            // from altering the date, specifically the day field.  For example:\n            //\n            // ```\n            // var x = new Date('2013-10-02');\n            // var day = x.getDate();\n            // ```\n            //\n            // The day variable above will be 1 instead of 2 in, say, US Pacific time\n            // zone.\n            let isSelectedMonth = false;\n            if (typeof selected !== 'undefined') {\n                isSelectedMonth = (selected.getUTCFullYear() === year && (selected.getUTCMonth() + 1) === month);\n            }\n\n            month = parseInt(month);\n            year = parseInt(year);\n            const calDiv = document.getElementById(div_id);\n            removeChildren(calDiv);\n            const calTable = document.createElement('table');\n            quickElement('caption', calTable, CalendarNamespace.monthsOfYear[month - 1] + ' ' + year);\n            const tableBody = quickElement('tbody', calTable);\n\n            // Draw days-of-week header\n            let tableRow = quickElement('tr', tableBody);\n            for (let i = 0; i < 7; i++) {\n                quickElement('th', tableRow, CalendarNamespace.daysOfWeek[(i + CalendarNamespace.firstDayOfWeek) % 7]);\n            }\n\n            const startingPos = new Date(year, month - 1, 1 - CalendarNamespace.firstDayOfWeek).getDay();\n            const days = CalendarNamespace.getDaysInMonth(month, year);\n\n            let nonDayCell;\n\n            // Draw blanks before first of month\n            tableRow = quickElement('tr', tableBody);\n            for (let i = 0; i < startingPos; i++) {\n                nonDayCell = quickElement('td', tableRow, ' ');\n                nonDayCell.className = \"nonday\";\n            }\n\n            function calendarMonth(y, m) {\n                function onClick(e) {\n                    e.preventDefault();\n                    callback(y, m, this.textContent);\n                }\n                return onClick;\n            }\n\n            // Draw days of month\n            let currentDay = 1;\n            for (let i = startingPos; currentDay <= days; i++) {\n                if (i % 7 === 0 && currentDay !== 1) {\n                    tableRow = quickElement('tr', tableBody);\n                }\n                if ((currentDay === todayDay) && (month === todayMonth) && (year === todayYear)) {\n                    todayClass = 'today';\n                } else {\n                    todayClass = '';\n                }\n\n                // use UTC function; see above for explanation.\n                if (isSelectedMonth && currentDay === selected.getUTCDate()) {\n                    if (todayClass !== '') {\n                        todayClass += \" \";\n                    }\n                    todayClass += \"selected\";\n                }\n\n                const cell = quickElement('td', tableRow, '', 'class', todayClass);\n                const link = quickElement('a', cell, currentDay, 'href', '#');\n                link.addEventListener('click', calendarMonth(year, month));\n                currentDay++;\n            }\n\n            // Draw blanks after end of month (optional, but makes for valid code)\n            while (tableRow.childNodes.length < 7) {\n                nonDayCell = quickElement('td', tableRow, ' ');\n                nonDayCell.className = \"nonday\";\n            }\n\n            calDiv.appendChild(calTable);\n        }\n    };\n\n    // Calendar -- A calendar instance\n    function Calendar(div_id, callback, selected) {\n        // div_id (string) is the ID of the element in which the calendar will\n        //     be displayed\n        // callback (string) is the name of a JavaScript function that will be\n        //     called with the parameters (year, month, day) when a day in the\n        //     calendar is clicked\n        this.div_id = div_id;\n        this.callback = callback;\n        this.today = new Date();\n        this.currentMonth = this.today.getMonth() + 1;\n        this.currentYear = this.today.getFullYear();\n        if (typeof selected !== 'undefined') {\n            this.selected = selected;\n        }\n    }\n    Calendar.prototype = {\n        drawCurrent: function() {\n            CalendarNamespace.draw(this.currentMonth, this.currentYear, this.div_id, this.callback, this.selected);\n        },\n        drawDate: function(month, year, selected) {\n            this.currentMonth = month;\n            this.currentYear = year;\n\n            if(selected) {\n                this.selected = selected;\n            }\n\n            this.drawCurrent();\n        },\n        drawPreviousMonth: function() {\n            if (this.currentMonth === 1) {\n                this.currentMonth = 12;\n                this.currentYear--;\n            }\n            else {\n                this.currentMonth--;\n            }\n            this.drawCurrent();\n        },\n        drawNextMonth: function() {\n            if (this.currentMonth === 12) {\n                this.currentMonth = 1;\n                this.currentYear++;\n            }\n            else {\n                this.currentMonth++;\n            }\n            this.drawCurrent();\n        },\n        drawPreviousYear: function() {\n            this.currentYear--;\n            this.drawCurrent();\n        },\n        drawNextYear: function() {\n            this.currentYear++;\n            this.drawCurrent();\n        }\n    };\n    window.Calendar = Calendar;\n    window.CalendarNamespace = CalendarNamespace;\n}\n","inputSourceMap":null}