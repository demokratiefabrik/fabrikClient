{"code":"\"use strict\";{const e={calendars:[],calendarInputs:[],clockInputs:[],clockHours:{default_:[[gettext_noop(\"Now\"),-1],[gettext_noop(\"Midnight\"),0],[gettext_noop(\"6 a.m.\"),6],[gettext_noop(\"Noon\"),12],[gettext_noop(\"6 p.m.\"),18]]},dismissClockFunc:[],dismissCalendarFunc:[],calendarDivName1:\"calendarbox\",calendarDivName2:\"calendarin\",calendarLinkName:\"calendarlink\",clockDivName:\"clockbox\",clockLinkName:\"clocklink\",shortCutsClass:\"datetimeshortcuts\",timezoneWarningClass:\"timezonewarning\",timezoneOffset:0,init:function(){const t=document.getElementsByTagName(\"body\")[0],n=t.dataset.adminUtcOffset;if(n){const t=-60*(new Date).getTimezoneOffset();e.timezoneOffset=t-n}for(const a of document.getElementsByTagName(\"input\"))\"text\"===a.type&&a.classList.contains(\"vTimeField\")?(e.addClock(a),e.addTimezoneWarning(a)):\"text\"===a.type&&a.classList.contains(\"vDateField\")&&(e.addCalendar(a),e.addTimezoneWarning(a))},now:function(){const e=document.getElementsByTagName(\"body\")[0],t=e.dataset.adminUtcOffset;if(t){const e=new Date,n=-60*e.getTimezoneOffset();return e.setTime(e.getTime()+1e3*(t-n)),e}return new Date},addTimezoneWarning:function(t){const n=e.timezoneWarningClass;let a,c=e.timezoneOffset/3600;if(!c)return;if(t.parentNode.querySelectorAll(\".\"+n).length)return;c>0?a=ngettext(\"Note: You are %s hour ahead of server time.\",\"Note: You are %s hours ahead of server time.\",c):(c*=-1,a=ngettext(\"Note: You are %s hour behind server time.\",\"Note: You are %s hours behind server time.\",c)),a=interpolate(a,[c]);const o=document.createElement(\"span\");o.className=n,o.textContent=a,t.parentNode.appendChild(document.createElement(\"br\")),t.parentNode.appendChild(o)},addClock:function(t){const n=e.clockInputs.length;e.clockInputs[n]=t,e.dismissClockFunc[n]=function(){return e.dismissClock(n),!0};const a=document.createElement(\"span\");a.className=e.shortCutsClass,t.parentNode.insertBefore(a,t.nextSibling);const c=document.createElement(\"a\");c.href=\"#\",c.textContent=gettext(\"Now\"),c.addEventListener(\"click\",(function(t){t.preventDefault(),e.handleClockQuicklink(n,-1)}));const o=document.createElement(\"a\");o.href=\"#\",o.id=e.clockLinkName+n,o.addEventListener(\"click\",(function(t){t.preventDefault(),t.stopPropagation(),e.openClock(n)})),quickElement(\"span\",o,\"\",\"class\",\"clock-icon\",\"title\",gettext(\"Choose a Time\")),a.appendChild(document.createTextNode(\" \")),a.appendChild(c),a.appendChild(document.createTextNode(\" | \")),a.appendChild(o);const i=document.createElement(\"div\");i.style.display=\"none\",i.style.position=\"absolute\",i.className=\"clockbox module\",i.id=e.clockDivName+n,document.body.appendChild(i),i.addEventListener(\"click\",(function(e){e.stopPropagation()})),quickElement(\"h2\",i,gettext(\"Choose a time\"));const d=quickElement(\"ul\",i);d.className=\"timelist\";const l=\"undefined\"===typeof e.clockHours[t.name]?\"default_\":t.name;e.clockHours[l].forEach((function(t){const a=quickElement(\"a\",quickElement(\"li\",d),gettext(t[0]),\"href\",\"#\");a.addEventListener(\"click\",(function(a){a.preventDefault(),e.handleClockQuicklink(n,t[1])}))}));const s=quickElement(\"p\",i);s.className=\"calendar-cancel\";const r=quickElement(\"a\",s,gettext(\"Cancel\"),\"href\",\"#\");r.addEventListener(\"click\",(function(t){t.preventDefault(),e.dismissClock(n)})),document.addEventListener(\"keyup\",(function(t){27===t.which&&(e.dismissClock(n),t.preventDefault())}))},openClock:function(t){const n=document.getElementById(e.clockDivName+t),a=document.getElementById(e.clockLinkName+t);\"rtl\"!==window.getComputedStyle(document.body).direction?n.style.left=findPosX(a)+17+\"px\":n.style.left=findPosX(a)-110+\"px\",n.style.top=Math.max(0,findPosY(a)-30)+\"px\",n.style.display=\"block\",document.addEventListener(\"click\",e.dismissClockFunc[t])},dismissClock:function(t){document.getElementById(e.clockDivName+t).style.display=\"none\",document.removeEventListener(\"click\",e.dismissClockFunc[t])},handleClockQuicklink:function(t,n){let a;a=-1===n?e.now():new Date(1970,1,1,n,0,0,0),e.clockInputs[t].value=a.strftime(get_format(\"TIME_INPUT_FORMATS\")[0]),e.clockInputs[t].focus(),e.dismissClock(t)},addCalendar:function(t){const n=e.calendars.length;e.calendarInputs[n]=t,e.dismissCalendarFunc[n]=function(){return e.dismissCalendar(n),!0};const a=document.createElement(\"span\");a.className=e.shortCutsClass,t.parentNode.insertBefore(a,t.nextSibling);const c=document.createElement(\"a\");c.href=\"#\",c.appendChild(document.createTextNode(gettext(\"Today\"))),c.addEventListener(\"click\",(function(t){t.preventDefault(),e.handleCalendarQuickLink(n,0)}));const o=document.createElement(\"a\");o.href=\"#\",o.id=e.calendarLinkName+n,o.addEventListener(\"click\",(function(t){t.preventDefault(),t.stopPropagation(),e.openCalendar(n)})),quickElement(\"span\",o,\"\",\"class\",\"date-icon\",\"title\",gettext(\"Choose a Date\")),a.appendChild(document.createTextNode(\" \")),a.appendChild(c),a.appendChild(document.createTextNode(\" | \")),a.appendChild(o);const i=document.createElement(\"div\");i.style.display=\"none\",i.style.position=\"absolute\",i.className=\"calendarbox module\",i.id=e.calendarDivName1+n,document.body.appendChild(i),i.addEventListener(\"click\",(function(e){e.stopPropagation()}));const d=quickElement(\"div\",i),l=quickElement(\"a\",d,\"<\",\"href\",\"#\");l.className=\"calendarnav-previous\",l.addEventListener(\"click\",(function(t){t.preventDefault(),e.drawPrev(n)}));const s=quickElement(\"a\",d,\">\",\"href\",\"#\");s.className=\"calendarnav-next\",s.addEventListener(\"click\",(function(t){t.preventDefault(),e.drawNext(n)}));const r=quickElement(\"div\",i,\"\",\"id\",e.calendarDivName2+n);r.className=\"calendar\",e.calendars[n]=new Calendar(e.calendarDivName2+n,e.handleCalendarCallback(n)),e.calendars[n].drawCurrent();const u=quickElement(\"div\",i);u.className=\"calendar-shortcuts\";let m=quickElement(\"a\",u,gettext(\"Yesterday\"),\"href\",\"#\");m.addEventListener(\"click\",(function(t){t.preventDefault(),e.handleCalendarQuickLink(n,-1)})),u.appendChild(document.createTextNode(\" | \")),m=quickElement(\"a\",u,gettext(\"Today\"),\"href\",\"#\"),m.addEventListener(\"click\",(function(t){t.preventDefault(),e.handleCalendarQuickLink(n,0)})),u.appendChild(document.createTextNode(\" | \")),m=quickElement(\"a\",u,gettext(\"Tomorrow\"),\"href\",\"#\"),m.addEventListener(\"click\",(function(t){t.preventDefault(),e.handleCalendarQuickLink(n,1)}));const p=quickElement(\"p\",i);p.className=\"calendar-cancel\";const f=quickElement(\"a\",p,gettext(\"Cancel\"),\"href\",\"#\");f.addEventListener(\"click\",(function(t){t.preventDefault(),e.dismissCalendar(n)})),document.addEventListener(\"keyup\",(function(t){27===t.which&&(e.dismissCalendar(n),t.preventDefault())}))},openCalendar:function(t){const n=document.getElementById(e.calendarDivName1+t),a=document.getElementById(e.calendarLinkName+t),c=e.calendarInputs[t];if(c.value){const n=get_format(\"DATE_INPUT_FORMATS\")[0],a=c.value.strptime(n),o=a.getUTCFullYear(),i=a.getUTCMonth()+1,d=/\\d{4}/;d.test(o.toString())&&i>=1&&i<=12&&e.calendars[t].drawDate(i,o,a)}\"rtl\"!==window.getComputedStyle(document.body).direction?n.style.left=findPosX(a)+17+\"px\":n.style.left=findPosX(a)-180+\"px\",n.style.top=Math.max(0,findPosY(a)-75)+\"px\",n.style.display=\"block\",document.addEventListener(\"click\",e.dismissCalendarFunc[t])},dismissCalendar:function(t){document.getElementById(e.calendarDivName1+t).style.display=\"none\",document.removeEventListener(\"click\",e.dismissCalendarFunc[t])},drawPrev:function(t){e.calendars[t].drawPreviousMonth()},drawNext:function(t){e.calendars[t].drawNextMonth()},handleCalendarCallback:function(t){let n=get_format(\"DATE_INPUT_FORMATS\")[0];return n=n.replace(\"\\\\\",\"\\\\\\\\\").replace(\"\\r\",\"\\\\r\").replace(\"\\n\",\"\\\\n\").replace(\"\\t\",\"\\\\t\").replace(\"'\",\"\\\\'\"),function(a,c,o){e.calendarInputs[t].value=new Date(a,c-1,o).strftime(n),e.calendarInputs[t].focus(),document.getElementById(e.calendarDivName1+t).style.display=\"none\"}},handleCalendarQuickLink:function(t,n){const a=e.now();a.setDate(a.getDate()+n),e.calendarInputs[t].value=a.strftime(get_format(\"DATE_INPUT_FORMATS\")[0]),e.calendarInputs[t].focus(),e.dismissCalendar(t)}};window.addEventListener(\"load\",e.init),window.DateTimeShortcuts=e}","name":"fabrikauth/admin/js/admin/DateTimeShortcuts.js","input":"/*global Calendar, findPosX, findPosY, get_format, gettext, gettext_noop, interpolate, ngettext, quickElement*/\n// Inserts shortcut buttons after all of the following:\n//     <input type=\"text\" class=\"vDateField\">\n//     <input type=\"text\" class=\"vTimeField\">\n'use strict';\n{\n    const DateTimeShortcuts = {\n        calendars: [],\n        calendarInputs: [],\n        clockInputs: [],\n        clockHours: {\n            default_: [\n                [gettext_noop('Now'), -1],\n                [gettext_noop('Midnight'), 0],\n                [gettext_noop('6 a.m.'), 6],\n                [gettext_noop('Noon'), 12],\n                [gettext_noop('6 p.m.'), 18]\n            ]\n        },\n        dismissClockFunc: [],\n        dismissCalendarFunc: [],\n        calendarDivName1: 'calendarbox', // name of calendar <div> that gets toggled\n        calendarDivName2: 'calendarin', // name of <div> that contains calendar\n        calendarLinkName: 'calendarlink', // name of the link that is used to toggle\n        clockDivName: 'clockbox', // name of clock <div> that gets toggled\n        clockLinkName: 'clocklink', // name of the link that is used to toggle\n        shortCutsClass: 'datetimeshortcuts', // class of the clock and cal shortcuts\n        timezoneWarningClass: 'timezonewarning', // class of the warning for timezone mismatch\n        timezoneOffset: 0,\n        init: function() {\n            const body = document.getElementsByTagName('body')[0];\n            const serverOffset = body.dataset.adminUtcOffset;\n            if (serverOffset) {\n                const localOffset = new Date().getTimezoneOffset() * -60;\n                DateTimeShortcuts.timezoneOffset = localOffset - serverOffset;\n            }\n\n            for (const inp of document.getElementsByTagName('input')) {\n                if (inp.type === 'text' && inp.classList.contains('vTimeField')) {\n                    DateTimeShortcuts.addClock(inp);\n                    DateTimeShortcuts.addTimezoneWarning(inp);\n                }\n                else if (inp.type === 'text' && inp.classList.contains('vDateField')) {\n                    DateTimeShortcuts.addCalendar(inp);\n                    DateTimeShortcuts.addTimezoneWarning(inp);\n                }\n            }\n        },\n        // Return the current time while accounting for the server timezone.\n        now: function() {\n            const body = document.getElementsByTagName('body')[0];\n            const serverOffset = body.dataset.adminUtcOffset;\n            if (serverOffset) {\n                const localNow = new Date();\n                const localOffset = localNow.getTimezoneOffset() * -60;\n                localNow.setTime(localNow.getTime() + 1000 * (serverOffset - localOffset));\n                return localNow;\n            } else {\n                return new Date();\n            }\n        },\n        // Add a warning when the time zone in the browser and backend do not match.\n        addTimezoneWarning: function(inp) {\n            const warningClass = DateTimeShortcuts.timezoneWarningClass;\n            let timezoneOffset = DateTimeShortcuts.timezoneOffset / 3600;\n\n            // Only warn if there is a time zone mismatch.\n            if (!timezoneOffset) {\n                return;\n            }\n\n            // Check if warning is already there.\n            if (inp.parentNode.querySelectorAll('.' + warningClass).length) {\n                return;\n            }\n\n            let message;\n            if (timezoneOffset > 0) {\n                message = ngettext(\n                    'Note: You are %s hour ahead of server time.',\n                    'Note: You are %s hours ahead of server time.',\n                    timezoneOffset\n                );\n            }\n            else {\n                timezoneOffset *= -1;\n                message = ngettext(\n                    'Note: You are %s hour behind server time.',\n                    'Note: You are %s hours behind server time.',\n                    timezoneOffset\n                );\n            }\n            message = interpolate(message, [timezoneOffset]);\n\n            const warning = document.createElement('span');\n            warning.className = warningClass;\n            warning.textContent = message;\n            inp.parentNode.appendChild(document.createElement('br'));\n            inp.parentNode.appendChild(warning);\n        },\n        // Add clock widget to a given field\n        addClock: function(inp) {\n            const num = DateTimeShortcuts.clockInputs.length;\n            DateTimeShortcuts.clockInputs[num] = inp;\n            DateTimeShortcuts.dismissClockFunc[num] = function() { DateTimeShortcuts.dismissClock(num); return true; };\n\n            // Shortcut links (clock icon and \"Now\" link)\n            const shortcuts_span = document.createElement('span');\n            shortcuts_span.className = DateTimeShortcuts.shortCutsClass;\n            inp.parentNode.insertBefore(shortcuts_span, inp.nextSibling);\n            const now_link = document.createElement('a');\n            now_link.href = \"#\";\n            now_link.textContent = gettext('Now');\n            now_link.addEventListener('click', function(e) {\n                e.preventDefault();\n                DateTimeShortcuts.handleClockQuicklink(num, -1);\n            });\n            const clock_link = document.createElement('a');\n            clock_link.href = '#';\n            clock_link.id = DateTimeShortcuts.clockLinkName + num;\n            clock_link.addEventListener('click', function(e) {\n                e.preventDefault();\n                // avoid triggering the document click handler to dismiss the clock\n                e.stopPropagation();\n                DateTimeShortcuts.openClock(num);\n            });\n\n            quickElement(\n                'span', clock_link, '',\n                'class', 'clock-icon',\n                'title', gettext('Choose a Time')\n            );\n            shortcuts_span.appendChild(document.createTextNode('\\u00A0'));\n            shortcuts_span.appendChild(now_link);\n            shortcuts_span.appendChild(document.createTextNode('\\u00A0|\\u00A0'));\n            shortcuts_span.appendChild(clock_link);\n\n            // Create clock link div\n            //\n            // Markup looks like:\n            // <div id=\"clockbox1\" class=\"clockbox module\">\n            //     <h2>Choose a time</h2>\n            //     <ul class=\"timelist\">\n            //         <li><a href=\"#\">Now</a></li>\n            //         <li><a href=\"#\">Midnight</a></li>\n            //         <li><a href=\"#\">6 a.m.</a></li>\n            //         <li><a href=\"#\">Noon</a></li>\n            //         <li><a href=\"#\">6 p.m.</a></li>\n            //     </ul>\n            //     <p class=\"calendar-cancel\"><a href=\"#\">Cancel</a></p>\n            // </div>\n\n            const clock_box = document.createElement('div');\n            clock_box.style.display = 'none';\n            clock_box.style.position = 'absolute';\n            clock_box.className = 'clockbox module';\n            clock_box.id = DateTimeShortcuts.clockDivName + num;\n            document.body.appendChild(clock_box);\n            clock_box.addEventListener('click', function(e) { e.stopPropagation(); });\n\n            quickElement('h2', clock_box, gettext('Choose a time'));\n            const time_list = quickElement('ul', clock_box);\n            time_list.className = 'timelist';\n            // The list of choices can be overridden in JavaScript like this:\n            // DateTimeShortcuts.clockHours.name = [['3 a.m.', 3]];\n            // where name is the name attribute of the <input>.\n            const name = typeof DateTimeShortcuts.clockHours[inp.name] === 'undefined' ? 'default_' : inp.name;\n            DateTimeShortcuts.clockHours[name].forEach(function(element) {\n                const time_link = quickElement('a', quickElement('li', time_list), gettext(element[0]), 'href', '#');\n                time_link.addEventListener('click', function(e) {\n                    e.preventDefault();\n                    DateTimeShortcuts.handleClockQuicklink(num, element[1]);\n                });\n            });\n\n            const cancel_p = quickElement('p', clock_box);\n            cancel_p.className = 'calendar-cancel';\n            const cancel_link = quickElement('a', cancel_p, gettext('Cancel'), 'href', '#');\n            cancel_link.addEventListener('click', function(e) {\n                e.preventDefault();\n                DateTimeShortcuts.dismissClock(num);\n            });\n\n            document.addEventListener('keyup', function(event) {\n                if (event.which === 27) {\n                    // ESC key closes popup\n                    DateTimeShortcuts.dismissClock(num);\n                    event.preventDefault();\n                }\n            });\n        },\n        openClock: function(num) {\n            const clock_box = document.getElementById(DateTimeShortcuts.clockDivName + num);\n            const clock_link = document.getElementById(DateTimeShortcuts.clockLinkName + num);\n\n            // Recalculate the clockbox position\n            // is it left-to-right or right-to-left layout ?\n            if (window.getComputedStyle(document.body).direction !== 'rtl') {\n                clock_box.style.left = findPosX(clock_link) + 17 + 'px';\n            }\n            else {\n                // since style's width is in em, it'd be tough to calculate\n                // px value of it. let's use an estimated px for now\n                clock_box.style.left = findPosX(clock_link) - 110 + 'px';\n            }\n            clock_box.style.top = Math.max(0, findPosY(clock_link) - 30) + 'px';\n\n            // Show the clock box\n            clock_box.style.display = 'block';\n            document.addEventListener('click', DateTimeShortcuts.dismissClockFunc[num]);\n        },\n        dismissClock: function(num) {\n            document.getElementById(DateTimeShortcuts.clockDivName + num).style.display = 'none';\n            document.removeEventListener('click', DateTimeShortcuts.dismissClockFunc[num]);\n        },\n        handleClockQuicklink: function(num, val) {\n            let d;\n            if (val === -1) {\n                d = DateTimeShortcuts.now();\n            }\n            else {\n                d = new Date(1970, 1, 1, val, 0, 0, 0);\n            }\n            DateTimeShortcuts.clockInputs[num].value = d.strftime(get_format('TIME_INPUT_FORMATS')[0]);\n            DateTimeShortcuts.clockInputs[num].focus();\n            DateTimeShortcuts.dismissClock(num);\n        },\n        // Add calendar widget to a given field.\n        addCalendar: function(inp) {\n            const num = DateTimeShortcuts.calendars.length;\n\n            DateTimeShortcuts.calendarInputs[num] = inp;\n            DateTimeShortcuts.dismissCalendarFunc[num] = function() { DateTimeShortcuts.dismissCalendar(num); return true; };\n\n            // Shortcut links (calendar icon and \"Today\" link)\n            const shortcuts_span = document.createElement('span');\n            shortcuts_span.className = DateTimeShortcuts.shortCutsClass;\n            inp.parentNode.insertBefore(shortcuts_span, inp.nextSibling);\n            const today_link = document.createElement('a');\n            today_link.href = '#';\n            today_link.appendChild(document.createTextNode(gettext('Today')));\n            today_link.addEventListener('click', function(e) {\n                e.preventDefault();\n                DateTimeShortcuts.handleCalendarQuickLink(num, 0);\n            });\n            const cal_link = document.createElement('a');\n            cal_link.href = '#';\n            cal_link.id = DateTimeShortcuts.calendarLinkName + num;\n            cal_link.addEventListener('click', function(e) {\n                e.preventDefault();\n                // avoid triggering the document click handler to dismiss the calendar\n                e.stopPropagation();\n                DateTimeShortcuts.openCalendar(num);\n            });\n            quickElement(\n                'span', cal_link, '',\n                'class', 'date-icon',\n                'title', gettext('Choose a Date')\n            );\n            shortcuts_span.appendChild(document.createTextNode('\\u00A0'));\n            shortcuts_span.appendChild(today_link);\n            shortcuts_span.appendChild(document.createTextNode('\\u00A0|\\u00A0'));\n            shortcuts_span.appendChild(cal_link);\n\n            // Create calendarbox div.\n            //\n            // Markup looks like:\n            //\n            // <div id=\"calendarbox3\" class=\"calendarbox module\">\n            //     <h2>\n            //           <a href=\"#\" class=\"link-previous\">&lsaquo;</a>\n            //           <a href=\"#\" class=\"link-next\">&rsaquo;</a> February 2003\n            //     </h2>\n            //     <div class=\"calendar\" id=\"calendarin3\">\n            //         <!-- (cal) -->\n            //     </div>\n            //     <div class=\"calendar-shortcuts\">\n            //          <a href=\"#\">Yesterday</a> | <a href=\"#\">Today</a> | <a href=\"#\">Tomorrow</a>\n            //     </div>\n            //     <p class=\"calendar-cancel\"><a href=\"#\">Cancel</a></p>\n            // </div>\n            const cal_box = document.createElement('div');\n            cal_box.style.display = 'none';\n            cal_box.style.position = 'absolute';\n            cal_box.className = 'calendarbox module';\n            cal_box.id = DateTimeShortcuts.calendarDivName1 + num;\n            document.body.appendChild(cal_box);\n            cal_box.addEventListener('click', function(e) { e.stopPropagation(); });\n\n            // next-prev links\n            const cal_nav = quickElement('div', cal_box);\n            const cal_nav_prev = quickElement('a', cal_nav, '<', 'href', '#');\n            cal_nav_prev.className = 'calendarnav-previous';\n            cal_nav_prev.addEventListener('click', function(e) {\n                e.preventDefault();\n                DateTimeShortcuts.drawPrev(num);\n            });\n\n            const cal_nav_next = quickElement('a', cal_nav, '>', 'href', '#');\n            cal_nav_next.className = 'calendarnav-next';\n            cal_nav_next.addEventListener('click', function(e) {\n                e.preventDefault();\n                DateTimeShortcuts.drawNext(num);\n            });\n\n            // main box\n            const cal_main = quickElement('div', cal_box, '', 'id', DateTimeShortcuts.calendarDivName2 + num);\n            cal_main.className = 'calendar';\n            DateTimeShortcuts.calendars[num] = new Calendar(DateTimeShortcuts.calendarDivName2 + num, DateTimeShortcuts.handleCalendarCallback(num));\n            DateTimeShortcuts.calendars[num].drawCurrent();\n\n            // calendar shortcuts\n            const shortcuts = quickElement('div', cal_box);\n            shortcuts.className = 'calendar-shortcuts';\n            let day_link = quickElement('a', shortcuts, gettext('Yesterday'), 'href', '#');\n            day_link.addEventListener('click', function(e) {\n                e.preventDefault();\n                DateTimeShortcuts.handleCalendarQuickLink(num, -1);\n            });\n            shortcuts.appendChild(document.createTextNode('\\u00A0|\\u00A0'));\n            day_link = quickElement('a', shortcuts, gettext('Today'), 'href', '#');\n            day_link.addEventListener('click', function(e) {\n                e.preventDefault();\n                DateTimeShortcuts.handleCalendarQuickLink(num, 0);\n            });\n            shortcuts.appendChild(document.createTextNode('\\u00A0|\\u00A0'));\n            day_link = quickElement('a', shortcuts, gettext('Tomorrow'), 'href', '#');\n            day_link.addEventListener('click', function(e) {\n                e.preventDefault();\n                DateTimeShortcuts.handleCalendarQuickLink(num, +1);\n            });\n\n            // cancel bar\n            const cancel_p = quickElement('p', cal_box);\n            cancel_p.className = 'calendar-cancel';\n            const cancel_link = quickElement('a', cancel_p, gettext('Cancel'), 'href', '#');\n            cancel_link.addEventListener('click', function(e) {\n                e.preventDefault();\n                DateTimeShortcuts.dismissCalendar(num);\n            });\n            document.addEventListener('keyup', function(event) {\n                if (event.which === 27) {\n                    // ESC key closes popup\n                    DateTimeShortcuts.dismissCalendar(num);\n                    event.preventDefault();\n                }\n            });\n        },\n        openCalendar: function(num) {\n            const cal_box = document.getElementById(DateTimeShortcuts.calendarDivName1 + num);\n            const cal_link = document.getElementById(DateTimeShortcuts.calendarLinkName + num);\n            const inp = DateTimeShortcuts.calendarInputs[num];\n\n            // Determine if the current value in the input has a valid date.\n            // If so, draw the calendar with that date's year and month.\n            if (inp.value) {\n                const format = get_format('DATE_INPUT_FORMATS')[0];\n                const selected = inp.value.strptime(format);\n                const year = selected.getUTCFullYear();\n                const month = selected.getUTCMonth() + 1;\n                const re = /\\d{4}/;\n                if (re.test(year.toString()) && month >= 1 && month <= 12) {\n                    DateTimeShortcuts.calendars[num].drawDate(month, year, selected);\n                }\n            }\n\n            // Recalculate the clockbox position\n            // is it left-to-right or right-to-left layout ?\n            if (window.getComputedStyle(document.body).direction !== 'rtl') {\n                cal_box.style.left = findPosX(cal_link) + 17 + 'px';\n            }\n            else {\n                // since style's width is in em, it'd be tough to calculate\n                // px value of it. let's use an estimated px for now\n                cal_box.style.left = findPosX(cal_link) - 180 + 'px';\n            }\n            cal_box.style.top = Math.max(0, findPosY(cal_link) - 75) + 'px';\n\n            cal_box.style.display = 'block';\n            document.addEventListener('click', DateTimeShortcuts.dismissCalendarFunc[num]);\n        },\n        dismissCalendar: function(num) {\n            document.getElementById(DateTimeShortcuts.calendarDivName1 + num).style.display = 'none';\n            document.removeEventListener('click', DateTimeShortcuts.dismissCalendarFunc[num]);\n        },\n        drawPrev: function(num) {\n            DateTimeShortcuts.calendars[num].drawPreviousMonth();\n        },\n        drawNext: function(num) {\n            DateTimeShortcuts.calendars[num].drawNextMonth();\n        },\n        handleCalendarCallback: function(num) {\n            let format = get_format('DATE_INPUT_FORMATS')[0];\n            // the format needs to be escaped a little\n            format = format.replace('\\\\', '\\\\\\\\')\n                .replace('\\r', '\\\\r')\n                .replace('\\n', '\\\\n')\n                .replace('\\t', '\\\\t')\n                .replace(\"'\", \"\\\\'\");\n            return function(y, m, d) {\n                DateTimeShortcuts.calendarInputs[num].value = new Date(y, m - 1, d).strftime(format);\n                DateTimeShortcuts.calendarInputs[num].focus();\n                document.getElementById(DateTimeShortcuts.calendarDivName1 + num).style.display = 'none';\n            };\n        },\n        handleCalendarQuickLink: function(num, offset) {\n            const d = DateTimeShortcuts.now();\n            d.setDate(d.getDate() + offset);\n            DateTimeShortcuts.calendarInputs[num].value = d.strftime(get_format('DATE_INPUT_FORMATS')[0]);\n            DateTimeShortcuts.calendarInputs[num].focus();\n            DateTimeShortcuts.dismissCalendar(num);\n        }\n    };\n\n    window.addEventListener('load', DateTimeShortcuts.init);\n    window.DateTimeShortcuts = DateTimeShortcuts;\n}\n","inputSourceMap":null}